defaults:
  - default
  - _self_

wandb:
  # FLAG
  project: torchcell_005-kuzmin2018-tmi_dcell
  tags: []

cell_dataset:
  # DCell uses gene ontology instead of STRING networks
  graphs: [] # Empty list as DCell doesn't use STRING networks
  use_gene_ontology: true # Enable gene ontology for DCell
  node_embeddings: null
  #learnable_embedding_input_channels: 64 # Could add...

profiler:
  is_pytorch: true

data_module:
  is_perturbation_subset: true
  perturbation_subset_size: 100
  batch_size: 4 #32
  num_workers: 2
  pin_memory: false
  prefetch: false
  follow_batch: ["perturbation_indices", "mutant_state"] # Important for DCell batching

trainer:
  max_epochs: 10 #1000 # 20 # FLAG
  strategy: auto #ddp #ddp_find_unused_parameters_true #auto # ddp
  num_nodes: 1
  accelerator: cpu
  devices: 1
  overfit_batches: 0

# ------ Model-specific parameters
# ------
model:
  checkpoint_path: null #*.ckpt
  # DCell specific parameters
  subsystem_output_min: 20 # Minimum output size for any subsystem
  subsystem_output_max_mult: 0.3 # Multiplier for scaling subsystem output sizes
  output_size: 1 # Size of final prediction (1 for growth/fitness)
  # New DCell parameters
  norm_type: "batch" # Type of normalization: 'batch', 'layer', 'instance', or 'none'
  norm_before_act: false # Whether to apply normalization before activation (default: false)
  subsystem_num_layers: 1 # Number of layers per subsystem (1 is original DCell)
  activation: "tanh" # Activation function: 'tanh', 'relu', 'leaky_relu', 'gelu', 'selu'
  init_range: 0.001 # Range for uniform weight initialization
  # Gene embedding parameters
  # Setting learnable_embedding_dim to null uses original binary encoding
  # Setting it to an integer value (e.g., 32, 64, 128) uses learnable gene embeddings
  learnable_embedding_dim: null # null for binary encoding, int for learnable embeddings

regression_task:
  loss: "dcell_new" # Use the DCellNewLoss
  # DCellNewLoss configuration
  dcell_loss:
    alpha: 0.3 # Weight for auxiliary losses
    use_auxiliary_losses: true # default true  # Whether to use losses from non-root subsystems

  is_weighted_phenotype_loss: false

  optimizer:
    type: "AdamW"
    lr: 1e-3
    weight_decay: 1e-6
  lr_scheduler:
    type: "ReduceLROnPlateau"
    mode: "min"
    factor: 0.2
    patience: 3
    threshold: 1e -4
    threshold_mode: "rel"
    cooldown: 2
    min_lr: 1e-9
    eps: 1e-10
  clip_grad_norm: true
  clip_grad_norm_max_norm: 10.0
  grad_accumulation_schedule: null
  plot_sample_ceiling: 10000
  plot_every_n_epochs: 20
