program: experiments/smf-dmf-tmf-001/deep_set.py
project: torchcell_smf-dmf-tmf-001_deep_set_1e04
method: random
metric:
  goal: minimize
  name: val/lossj
# early_terminate:
#   type: hyperband
#   min_iter: 16
#   eta: 1.3

parameters:
  cell_dataset:
    parameters:
      graphs:
        values: [null]
      node_embeddings:
        values:
          - [one_hot_gene]
          # - [codon_frequency]
          # - [calm]
          # - [fudt_downstream]
          # - [fudt_upstream]
          # - [prot_T5_all]
          # - [prot_T5_no_dubious]
          # - [nt_window_5979]
          # - [nt_window_three_prime_300]
          # - [nt_window_five_prime_1003]
          # - [esm2_t33_650M_UR50D_all]
          # - [esm2_t33_650M_UR50D_no_dubious]
          # - [normalized_chrom_pathways]
          # - [random_1000]
      max_size:
        values: [1e4]
  data_module:
    parameters:
      batch_size:
        values: [16]
      num_workers:
        values: [6]
      pin_memory:
        values: [true]
  trainer:
    parameters:
      max_epochs:
        values: [50]
      strategy:
        values: [auto]
      accelerator:
        values: [gpu]
  models:
    parameters:
      graph:
        parameters:
          hidden_channels:
            values: [64, 32]
          out_channels:
            values: [32, 16]
          num_node_layers:
            values: [0, 2, 4]
          num_set_layers:
            values: [2, 4, 6, 8]
          norm:
            values: [batch, layer]
          activation:
            values: [gelu, relu]
          skip_node:
            values: [true, false]
          skip_set:
            values: [true]
          aggregation:
            values: [mean, sum]
      pred_head:
        parameters:
          hidden_channels:
            values: [0]
          out_channels:
            values: [1]
          num_layers:
            values: [1]
          dropout_prob:
            values: [0.0, 0.2]
          norm:
            values: [null]
          activation:
            values: [null]
          output_activation:
            values: [null]
  regression_task:
    parameters:
      target:
        values: [fitness]
      boxplot_every_n_epochs:
        values: [5]
      learning_rate:
        values: [1e-3, 1e-4, 1e-5]
      weight_decay:
        values: [0, 1e-2, 1e-1, 1e-3, 1e-4, 1e-5]
      loss:
        values: [mse]
      alpha:
        values: [0] #[1e-2]
      clip_grad_norm:
        values: [true, false]
      clip_grad_norm_max_norm:
        values: [1]
command:
  - ${env}
  - python
  - ${program}