#experiments/006-kuzmin-tmi/conf/hetero_cell_bipartite_dango_gi_wasserstein.yaml
# Configuration for using MleWassSupCR loss with geomloss and SupCR
defaults:
  - default
  - _self_

wandb:
  project: torchcell_006-kuzmin-tmi_hetero_cell_bipartite_dango_gi_wasserstein
  tags: [wasserstein_loss]

cell_dataset:
  graphs: [
      physical,
      regulatory,
    ]

  node_embeddings:
    - learnable
  learnable_embedding_input_channels: 64
  incidence_graphs: [metabolism_bipartite]

# Transform configuration moved out of regression_task
transforms:
  use_transforms: true
  forward_transform:
    normalization:
      gene_interaction:
        strategy: "standard"

profiler:
  is_pytorch: true

data_module:
  is_perturbation_subset: true
  perturbation_subset_size: 1000
  batch_size: 32
  num_workers: 4
  pin_memory: true
  prefetch: false
  prefetch_factor: 2

trainer:
  max_epochs: 300
  strategy: auto
  num_nodes: 1
  accelerator: gpu
  devices: 4
  overfit_batches: 0
  precision: "bf16-mixed"

# Compilation settings for PyTorch 2.0+
compile_mode: null

# ------ Placeholders for hydra optuna
heads: 8
norms: "layer"
# ------
model:
  checkpoint_path: null
  gene_num: 6607
  reaction_num: 7122
  metabolite_num: 2806
  hidden_channels: 64
  num_layers: 2
  norm: ${norms}
  activation: "gelu"
  dropout: 0.0
  gene_encoder_config:
    encoder_type: "gin"

    # Graph aggregation configuration
    graph_aggregation_method: "cross_attention"

    graph_aggregation_config:
      num_heads: 4
      dropout: 0.0

    # GAT-specific parameters (used when encoder_type="gatv2")
    heads: ${heads}
    concat: true
    bias: true
    add_self_loops: false
    share_weights: false
    # GIN-specific parameters (used when encoder_type="gin")
    gin_num_layers: 2
    gin_hidden_dim: null
  gpr_conv_config:
    encoder_type: "gin"
    heads: ${heads}
    concat: true
    add_self_loops: false
    gin_num_layers: 2
    gin_hidden_dim: null
  metabolism_config:
    encoder_type: "gin"
    is_stoich_gated: true
    use_attention: true
    heads: ${heads}
    concat: true
    gin_num_layers: 2
    gin_hidden_dim: null
  prediction_head_config:
    hidden_channels: 64
    head_num_layers: 4
    dropout: 0.0
    activation: "gelu"
    head_norm: ${norms}
  # Dango-like local predictor config
  local_predictor_config:
    num_attention_layers: 2
    num_heads: 8
    combination_method: "concat"

regression_task:
  loss: mle_wass_supcr  # Using MleWassSupCR with geomloss and SupCR
  is_weighted_phenotype_loss: false

  # Lambda weights for loss components
  lambda_mse: 1.0
  lambda_wasserstein: 0.1  # Replaces lambda_dist for MleWassSupCR
  lambda_supcr: 0.001  # Small weight for supervised contrastive

  # MleWassSupCR specific configuration
  loss_config:
    # Wasserstein-specific parameters
    wasserstein_blur: 0.05  # Entropic regularization (smaller = more precise)
    wasserstein_p: 2  # p=2 for W2 (quadratic) distance
    wasserstein_scaling: 0.9  # Multi-scale parameter (0.5-1.0)

    # SupCR temperature
    supcr_temperature: 0.1

    # Buffer configuration
    use_buffer: true
    buffer_size: 4096
    min_samples_for_wasserstein: 64  # Min samples for Wasserstein computation
    min_samples_for_supcr: 64

    # DDP configuration
    use_ddp_gather: true
    gather_interval: 1

    # Adaptive weighting
    use_adaptive_weighting: true
    # warmup_epochs and stable_epoch dynamically set based on max_epochs

    # Temperature scheduling for SupCR
    use_temp_scheduling: true
    init_temperature: 1.0
    final_temperature: 0.1
    temp_schedule: "exponential"

    # Training duration
    max_epochs: 300

  optimizer:
    type: "AdamW"
    lr: 5e-4
    weight_decay: 1e-12

  lr_scheduler: null

  clip_grad_norm: true
  clip_grad_norm_max_norm: 10.0
  grad_accumulation_schedule: {0: 16}
  plot_sample_ceiling: 10000
  plot_every_n_epochs: 2