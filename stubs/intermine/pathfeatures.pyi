from _typeshed import Incomplete

PATTERN_STR: str
PATH_PATTERN: Incomplete

class PathFeature:
    path: Incomplete
    def __init__(self, path) -> None: ...
    def to_string(self): ...
    def to_dict(self): ...
    @property
    def child_type(self) -> None: ...

class Join(PathFeature):
    valid_join_styles: Incomplete
    INNER: str
    OUTER: str
    child_type: str
    style: Incomplete
    def __init__(self, path, style: str = ...) -> None: ...
    def to_dict(self): ...

class PathDescription(PathFeature):
    child_type: str
    description: Incomplete
    def __init__(self, path, description) -> None: ...
    def to_dict(self): ...

class SortOrder(PathFeature):
    ASC: str
    DESC: str
    DIRECTIONS: Incomplete
    order: Incomplete
    def __init__(self, path, order) -> None: ...
    def to_string(self): ...

class SortOrderList:
    sort_orders: Incomplete
    def __init__(self, *sos) -> None: ...
    def append(self, *sos) -> None: ...
    def clear(self) -> None: ...
    def is_empty(self): ...
    def __len__(self) -> int: ...
    def __next__(self): ...
    def next(self): ...
    def __iter__(self): ...
