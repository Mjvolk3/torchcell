{
    "folders": [
        {
            "name": "TorchCell",
            "path": "."
        },
        {
            "name": "assets",
            "path": "notes/assets"
        },
        {
            "name": "data",
            "path": "data"
        },
        {
            "name": "______________",
            "path": "../______________"
        },
        {
            "name": "Gene_Graph",
            "path": "../Gene_Graph"
        },
        {
            "name": "multi_knockout",
            "path": "../multi_knockout"
        },
        {
            "name": "torchgeo",
            "path": "../torchgeo"
        },
        {
            "name": "intermine-ws-python",
            "path": "../intermine-ws-python"
        },
    ],
    "settings": {
        "dendron.rootDir": ".",
        "files.autoSave": "onFocusChange",
        "pasteImage.path": "${currentFileDir}/assets/images",
        "pasteImage.prefix": "./",
        "markdown-preview-enhanced.enableWikiLinkSyntax": true,
        "markdown-preview-enhanced.wikiLinkFileExtension": ".md",
        "editor.snippetSuggestions": "inline",
        "editor.suggest.snippetsPreventQuickSuggestions": false,
        "editor.suggest.showSnippets": true,
        "editor.tabCompletion": "on",
        "dendron.enableSelfContainedVaultWorkspace": true,
        "pasteImage.defaultName": "Y-MM-DD-HH-mm-ss",
        "workbench.colorCustomizations": {
            "titleBar.activeBackground": "#be2301c4"
        },
        "markdownlint.config":{
            "MD007": { "indent": 2 },
            "MD008": false,
            "MD013": false,
            "MD014": false,
            "MD018": false,
            "MD025": false,
            "MD026": false,
            "MD033": false,
            "MD045": false,
            "MD050": false,
        },
        "editor.codeActionsOnSave": {
            "source.fixAll.markdownlint": true,
         },
        "git.autoRepositoryDetection": false,
        "liveServer.settings.multiRootWorkspaceName": "TorchCell"
    },
    "extensions": {
        "recommendations": [
            "dendron.dendron",
            "dendron.dendron-paste-image",
            "dendron.dendron-markdown-shortcuts",
            "redhat.vscode-yaml"
        ],
        "unwantedRecommendations": [
            "dendron.dendron-markdown-links",
            "dendron.dendron-markdown-vault",
            "dendron.dendron-markdown-preview-enhanced",
            "shd101wyy.markdown-preview-enhanced",
            "kortina.vscode-markdown-notes",
            "mushan.vscode-paste-image"
        ]
    },
    "tasks": {
        "version": "2.0.0",
        "tasks": [
            {
                "label": "Paper: compile",
                "type": "shell",
                "command": "bash notes/assets/publish/scripts/compile_paper.sh",
                "problemMatcher": []
            },
            {
                "label": "Pandoc: quick-pdf",
                "type": "shell",
                "command": "cd ./notes && pandoc -F mermaid-filter -s ${file} -o ${fileDirname}/assets/pdf-output/${fileBasenameNoExtension}.pdf --pdf-engine=xelatex -V geometry:'top=2cm, bottom=1.5cm, left=2cm, right=2cm' --strip-comments   && cd ..",
                "problemMatcher": []
            },
            {
                "label": "Pandoc: bib-pdf",
                "type": "shell",
                "command": "cd ./notes && pandoc -F mermaid-filter -s ${file} -o ${fileDirname}/assets/pdf-output/${fileBasenameNoExtension}.pdf --pdf-engine=xelatex --citeproc --bibliography assets/publish/bib/bib.bib --metadata csl=assets/publish/bib/nature.csl -V geometry:'top=2cm, bottom=1.5cm, left=2cm, right=2cm' --strip-comments  && cd ..",
                "problemMatcher": []
            },
            {
                "label": "Pandoc: bib-tex-pdf",
                "type": "shell",
                "command": "./notes/assets/publish/scripts/bib_tex_pdf.sh ${file} ${fileDirname} ${fileBasenameNoExtension}",
                "problemMatcher": []
              },
            {
                "label": "nano: Interactive",
                "type": "shell",
                "command": "qsub -I -l nodes=nano${input:nanoNode}:ppn=${input:numProcessors}:gpus=1,walltime=3600",
                "problemMatcher": []
            },
            {
                "label": "nano: qsub main",
                "type": "shell",
                "command": "qsub main.script -l nodes=nano${input:nanoNode}:ppn=${input:numProcessors}:gpus=1,walltime=96:00:00 -N ${input:jobName}",
                "problemMatcher": []
            },
            {
                "label": "Delta: Interactive GPU",
                "type": "shell",
                "command": "srun --account=bbtp-delta-gpu --partition=gpuA40x4-interactive --nodes=1 --gpus-per-node=1 --tasks=1 --tasks-per-node=16 --cpus-per-task=1 --mem=20g --pty bash",
                "problemMatcher": []
            },
            {
                "label": "Delta: Interactive CPU",
                "type": "shell",
                "command": "srun --account=bbtp-delta-cpu --partition=cpu-interactive --nodes=1 --tasks=1 --tasks-per-node=1 --cpus-per-task=16 --mem=16g --pty bash",
                "problemMatcher": []
            },
            {
                "label": "genPE: M1 sweep",
                "type": "shell",
                "command": "bash src/genPE/sweep_m1.sh",
                "problemMatcher": []
            },
            {
                "label": "notability: sync",
                "type": "shell",
                "command": "bash notes/assets/notability/scripts/sync.sh",
                "problemMatcher": []
            },
            {
                "label": "mypy: file",
                "type": "shell",
                "command": "bash mypy/mypy.sh ${file}",
                "problemMatcher": []
            },
            {
                "label": "mypy: workspace",
                "type": "shell",
                "command": "bash mypy/mypy.sh .",
                "problemMatcher": []
            },
            {
                "label": "dmypy: restart",
                "type": "shell",
                "command": "bash mypy/dmypy_restart.sh",
                "problemMatcher": []
            },

        ],
        "inputs" : [
            {
                "id" : "jobName",
                "description": "name of nano job",
                "type": "promptString",
            },
            {
                "id" : "nanoNode",
                "description": "nano Node",
                "type": "pickString",
                "options": [
                    "1",
                    "2",
                    "3",
                    "4",
                    "6",
                    "8"

                ]
            },
            {
                "id": "numProcessors",
                "description": "number of cpus (nano2,nano3 (np=28); others (np=14) )",
                "type": "pickString",
                "options": [
                    "1",
                    "6",
                    "12",
                    "14",
                    "28",
                ]
            }
        ]
    },
    "launch": {
        "version": "0.2.0",
        "configurations": [

            {
                "name": "Python: Workspace Folder",
                "type": "python",
                "request": "launch",
                "program": "${file}",
                "console": "integratedTerminal",
                "justMyCode": false,
                "cwd": "${workspaceFolder:TorchCell}",
                "subProcess": true
            },
            {
                "name": "Python: torchgeo",
                "type": "python",
                "request": "launch",
                "program": "${file}",
                "console": "integratedTerminal",
                "justMyCode": false,
                "cwd": "${workspaceFolder:torchgeo}",
                "subProcess": true,
                "python": "/Users/michaelvolk/opt/miniconda3/envs/torchgeo/bin/python",
            },
            {
                "name": "Python: Attach",
                "type": "python",
                "request": "attach",
                "port": 5678,
                "host": "localhost",
                "pathMappings": [
                    {
                    "localRoot": "${workspaceFolder}",
                    "remoteRoot": "."
                    }
                ]
            }
        ]
    },
}