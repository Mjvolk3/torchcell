#experiments/006-kuzmin-tmi/conf/hetero_cell_bipartite_dango_gi.yaml
defaults:
  - default
  - _self_

wandb:
  # FLAG
  project: torchcell_006-kuzmin-tmi_hetero_cell_bipartite_dango_gi
  tags: []

cell_dataset:
  graphs: [
      physical,
      regulatory,
      tflink,
      string12_0_neighborhood,
      string12_0_fusion,
      string12_0_cooccurence,
      string12_0_coexpression,
      string12_0_experimental,
      string12_0_database,
    ]

  node_embeddings:
    - learnable
  learnable_embedding_input_channels: 64 #64
  incidence_graphs: [metabolism_bipartite]

# Transform configuration moved out of regression_task
transforms:
  use_transforms: true
  forward_transform:
    normalization:
      gene_interaction:
        strategy: "standard" # Options: standard, minmax, robust

profiler:
  is_pytorch: true

data_module:
  is_perturbation_subset: true
  perturbation_subset_size: 1e5 #2.5e4
  batch_size: 4 #32
  num_workers: 2
  pin_memory: false
  prefetch: false
  prefetch_factor: 2

trainer:
  max_epochs: 300 # 20 # FLAG
  strategy: ddp #ddp_find_unused_parameters_true #auto # ddp
  num_nodes: 1
  accelerator: gpu
  devices: 2
  overfit_batches: 0

# ------ Placeholders for hydra optuna
heads: 16 #10 # placeholder
norms: "layer" # placeholder
# ------
model:
  checkpoint_path: null #*.ckpt
  gene_num: 6607
  reaction_num: 7122
  metabolite_num: 2806
  hidden_channels: 64 #64
  num_layers: 2 # Number of hetero conv layers
  # norm: "batch"
  norm: ${norms}
  activation: "gelu"
  dropout: 0.1
  gene_encoder_config:
    # heads: 5
    heads: ${heads}
    concat: true
    bias: true
    add_self_loops: false
    share_weights: false
  gpr_conv_config:
    # heads: 2
    heads: ${heads}
    concat: true
    add_self_loops: false
  metabolism_config:
    is_stoich_gated: true
    use_attention: true
    # heads: 2
    heads: ${heads}
    concat: true
  prediction_head_config:
    hidden_channels: 64 #64
    head_num_layers: 4
    dropout: 0.1
    activation: "gelu"
    # residual: true
    # head_norm: "batch"
    head_norm: ${norms}
  # Dango-like local predictor config
  local_predictor_config:
    num_attention_layers: 2 # Number of self-attention layers (like Dango HyperSAGNN)
    num_heads: 16 # 16 16 # Number of attention heads (matching Dango) - hidden divisible by num HEADS #FLAG
    combination_method: "concat" # Options: "gating" (learned weights) or "concat" (fixed 0.5/0.5 weights)

regression_task:
  loss: icloss # Options: logcosh, icloss
  is_weighted_phenotype_loss: false
  lambda_dist: 100 #0.1 #0.1
  lambda_supcr: 0 #0.01 #0.001
  optimizer:
    type: "AdamW"
    lr: 1e-3 #ovrode by type
    weight_decay: 1e-8
  lr_scheduler: null
    # type: "CosineAnnealingWarmupRestarts"
    # Configs for "CosineAnnealingWarmupRestarts":
    # first_cycle_steps: 30  # Minima every 30 epochs
    # cycle_mult: 1.0  # Keep cycles the same length
    # max_lr: 1e-3  # Starting peak
    # min_lr: 1e-8  # Minimum value
    # warmup_steps: 5  # Warmup for 5 steps to reach max_lr
    # gamma: 0.6  # Decay from 1e-3 to ~1e-5 over 10 cycles
  clip_grad_norm: true
  clip_grad_norm_max_norm: 10.0
  grad_accumulation_schedule: null
  plot_sample_ceiling: 10000
  plot_every_n_epochs: 2
