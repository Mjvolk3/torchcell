from Bio import pairwise2
from Bio import SeqIO
from Bio.Seq import Seq

from torchcell.sequence.genome.scerevisiae.s288c import SCerevisiaeGenome
import numpy as np
import pandas as pd


def main():
    genome = SCerevisiaeGenome()
    genome.drop_chrmt()
    genome.drop_empty_go()

    # This is a hypothetical example; replace it with your real sequences.
    chromosome_seq = chromosome_seq = genome.fasta_sequences[genome.chr_to_nc[2]].seq
    # my_seq = Seq(
    #     "GTTGGAATGAAATTTTAATATCATCTATTTCGCAGCACTCATGTTACTATTATATCACATGCGGTGTAAGAGGATGGCATAAAGATTGAGAAACAGTCATCCAATCTAATGGAATGCACGACACAATAATGAGTGACAACATATAAAAGGAAGTAAGATACAATAATATTATTATGTATAACTATCGATTTCCTTTTGTGGATTCCTATATCCTCGAAAAGAACTTCTAGTATAATCTGTGTACCTAATATTACAGCCTTTGAAAACAATGGAATCCCAACAATTATCTTATTCCCATAATTCTCATATACAAGATACAAGGGAGAAGTAAACAATGGATACAAGGAGAAATATGGCGCTAAAGGCTGATTTAATTGGATTGTTCGATTCGAAGTCGCTCAATAGAATTTGATGGCTCCCTCAGAGTGCGGTTCAAATCATTCGGATACTTTGAAGAAAGGGTAATATATTGTACCTTTGAACATGAGTTCATGAGTTGAAAAAGGTAAAAATAATCTGCTAAAATGATTACTCTTCTCTAAGAATGTGGTCTTCCCCACCCACGTGATAGTAATACATAGGAACCGTTTTACTGAACGCTACATTACCCATCAATATAATATCATGATTTAGCCGCCGAATTTTATGTAACTAAAAGGTTGCGGGACTTTGAAGCCCAGGTAGAAGTGTTTCATTCACAGAAGGAGATGCCAATGTGCTATTATTATCCCTGTGTGGCGCACTATTCAAACGGATTTGACTGTTCTTCAAAATATCGTCATCGCAGACGCTAAGGTTGTTGGGAGAAGCCACAGTCATTAGATACGATAGTCTCATGATGACTTTTTCTCGTTTTTTTTCGACGTTTTAAGGTCGCGTCGAAGTTAGGAAGGTTAGTTCATTTACAACTTGTTTTTGAATACTTACTTTCTTAATCATCTATTTTGATTTGTTGTCCCTTAGGTCTATAGAACAGGATATCCCGCCGCGCAATTTACTAATG"
    # )
    my_seq = Seq(
        "ATTCTCATATACAAGATACAAGGGAGAAGTAAACAATGGATACAAGGAGAAATATGGCGCTAAAGGCTGATTTAATTGGATTGTTCGATTCGAAGTCGCT"
    )

    # Perform local sequence alignment
    alignments = pairwise2.align.localxx(chromosome_seq, my_seq)

    # Iterate through the alignment results
    for alignment in alignments:
        print("Score:", alignment[2])
        print("Position in chromosome:", alignment[3])
        print("Alignment:")
        print(pairwise2.format_alignment(*alignment))


if __name__ == "__main__":
    main()
