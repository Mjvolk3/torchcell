#experiments/006-kuzmin-tmi/conf/hetero_cell_bipartite_dango_gi.yaml
defaults:
  - default
  - _self_

wandb:
  # FLAG
  project: torchcell_006-kuzmin-tmi_hetero_cell_bipartite_dango_gi
  # project: torchcell_006-kuzmin-tmi_hetero_cell_bipartite_dango_gi_test
  tags: []

cell_dataset:
  graphs: [
      physical,
      regulatory,
      tflink,
      string12_0_neighborhood,
      string12_0_fusion,
      string12_0_cooccurence,
      string12_0_coexpression,
      string12_0_experimental,
      string12_0_database,
    ]

  node_embeddings:
    - learnable
  learnable_embedding_input_channels: 96 #64
  incidence_graphs: [metabolism_bipartite]

# Transform configuration moved out of regression_task
transforms:
  use_transforms: true
  forward_transform:
    normalization:
      gene_interaction:
        strategy: "standard" # Options: standard, minmax, robust

profiler:
  is_pytorch: true

data_module:
  is_perturbation_subset: false
  perturbation_subset_size: 1000 #2.5e4
  batch_size: 32 #32 #4 #32
  num_workers: 2
  pin_memory: false
  prefetch: false
  prefetch_factor: 2

trainer:
  max_epochs: 300 # Updated for shorter training
  strategy: ddp #ddp_find_unused_parameters_true #auto # ddp
  num_nodes: 1
  accelerator: gpu
  devices: 6
  overfit_batches: 0

# ------ Placeholders for hydra optuna
heads: 8 #10 # placeholder
norms: "layer" # placeholder
# ------
model:
  checkpoint_path: null #*.ckpt
  gene_num: 6607
  reaction_num: 7122
  metabolite_num: 2806
  hidden_channels: 96 #64
  num_layers: 2 # Number of hetero conv layers
  # norm: "batch"
  norm: ${norms}
  activation: "gelu"
  dropout: 0.0 # 0.1
  gene_encoder_config:
    # heads: 5
    heads: ${heads}
    concat: true
    bias: true
    add_self_loops: false
    share_weights: false
  gpr_conv_config:
    # heads: 2
    heads: ${heads}
    concat: true
    add_self_loops: false
  metabolism_config:
    is_stoich_gated: true
    use_attention: true
    # heads: 2
    heads: ${heads}
    concat: true
  prediction_head_config:
    hidden_channels: 96 #64
    head_num_layers: 4
    dropout: 0.0 #0.1
    activation: "gelu"
    # residual: true
    # head_norm: "batch"
    head_norm: ${norms}
  # Dango-like local predictor config
  local_predictor_config:
    num_attention_layers: 2 # Number of self-attention layers (like Dango HyperSAGNN)
    num_heads: 8 # 16 16 # Number of attention heads (matching Dango) - hidden divisible by num HEADS #FLAG
    combination_method: "concat" # Options: "gating" (learned weights) or "concat" (fixed 0.5/0.5 weights)

regression_task:
  loss: mle_dist_supcr # Options: logcosh, icloss, mle_dist_supcr
  is_weighted_phenotype_loss: false
  # Lambda weights for loss components
  lambda_mse: 1.0
  lambda_dist: 0.1 # 0.1 #0.1 #0.1
  lambda_supcr: 0.001 #0.001 #0.001 #0.001
  
  # MleDistSupCR specific configuration
  loss_config:
    # Component-specific parameters
    dist_bandwidth: 0.1
    supcr_temperature: 0.1
    # embedding_dim is dynamically set from model.hidden_channels
    
    # Buffer configuration
    use_buffer: true
    buffer_size: 384 #256
    min_samples_for_dist: 64
    min_samples_for_supcr: 64
    
    # DDP configuration
    use_ddp_gather: true
    gather_interval: 1  # Gather every forward pass
    
    # Adaptive weighting
    use_adaptive_weighting: true
    # warmup_epochs and stable_epoch now dynamically set based on max_epochs
    # warmup_epochs: None -> will be 10% of max_epochs (30 epochs)
    # stable_epoch: None -> will be 50% of max_epochs (150 epochs)
    
    # Temperature scheduling
    use_temp_scheduling: true
    init_temperature: 1.0
    final_temperature: 0.1
    temp_schedule: "exponential"
    
    # Training duration (for temperature scheduling)
    max_epochs: 30
  optimizer:
    type: "AdamW"
    lr: 5e-4 #overrode by type
    weight_decay: 1e-9
  lr_scheduler:
    type: "CosineAnnealingWarmupRestarts"
    first_cycle_steps: 60 # Minima every 60 epochs (5 cycles in 300 epochs)
    cycle_mult: 1.0 # Keep cycles the same length
    max_lr: 1e-4 # Starting peak
    min_lr: 1e-8 # Minimum value
    warmup_steps: 1 # Warmup for 1 step to reach max_lr
    gamma: 0.8 # Less aggressive decay for shorter training
  clip_grad_norm: true
  clip_grad_norm_max_norm: 10.0
  grad_accumulation_schedule: {0: 8}  # Accumulate for 16 steps to get effective batch size of 256
  plot_sample_ceiling: 10000
  plot_every_n_epochs: 2
